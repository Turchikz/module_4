CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    name TEXT,
    email TEXT,
    role TEXT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--
CREATE TABLE users_audit (
    id SERIAL PRIMARY KEY,
    user_id INTEGER,
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    changed_by TEXT,
    field_changed TEXT,
    old_value TEXT,
    new_value TEXT
);

--
CREATE OR REPLACE FUNCTION public.log_users_update()
RETURNS trigger AS $$
BEGIN
  IF  OLD.name IS DISTINCT FROM NEW.name Then
    insert into users_audit(user_id, changed_by, field_changed, old_value, new_value)
    values (NEW.id, current_user, 'name', OLD.name, NEW.name);
    return new;
  END IF;

  IF  OLD.email IS DISTINCT FROM NEW.email Then
    insert into users_audit(user_id, changed_by, field_changed, old_value, new_value)
    values (NEW.id, current_user, 'email', OLD.email, NEW.email);
    return new;
  END IF;

  IF  OLD.role IS DISTINCT FROM NEW.role Then
    insert into users_audit(user_id, changed_by, field_changed, old_value, new_value)
    values (NEW.id, current_user, 'role', OLD.role, NEW.role);
    return new;
  END IF;

  NEW.updated_at = CURRENT_TIMESTAMP;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

--
CREATE TRIGGER users_audit_trigger BEFORE
UPDATE ON public.users
FOR EACH ROW
EXECUTE FUNCTION log_users_update()

--
CREATE OR REPLACE FUNCTION export_yesterdays_audit_to_csv()
RETURNS TEXT AS $$
DECLARE
    yesterday_date TEXT;
    file_path TEXT;
BEGIN
    yesterday_date := to_char(CURRENT_DATE - INTERVAL '1 day', 'YYYY-MM-DD');
    file_path := '/tmp/users_audit_export_' || yesterday_date || '.csv';
    
    EXECUTE format('
        COPY (
            SELECT *
            FROM users_audit
            WHERE changed_at::date = %L::date
            ORDER BY changed_at
        ) TO %L WITH CSV HEADER',
        yesterday_date,
        file_path
    );
    
    RETURN 'Экспорт завершен: ' || file_path;
END;
$$ LANGUAGE plpgsql;

--
CREATE EXTENSION IF NOT EXISTS pg_cron;

SELECT cron.schedule(
    'export-yesterdays-audit-csv',
    '0 3 * * *',
    'SELECT export_yesterdays_audit_to_csv();'
);

--
INSERT INTO users (name, email, role)
VALUES 
('Алиса Янковская', 'alisa82@gmail.com', 'user'),
('Сергей Янчуров', 'sergey1983@gmail.com', 'user'),
('Александра Остроумова', 'aleksandra09081989@rambler.ru', 'user'),
('Полина Халимдарова', 'polina1888@mail.ru', 'admin');

--
UPDATE users
SET email = 'alisa84@gmail.com'
WHERE name = 'Алиса Янковская';

--
UPDATE users
SET role = 'user'
WHERE name = 'Полина Халимдарова';